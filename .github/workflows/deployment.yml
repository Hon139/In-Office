name: Build and Deploy to Netlify

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: cp template.env .env

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm test 

      - name: Build Vite app
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: public

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: public

      - name: Deploy to Netlify
        run: |
          netlify deploy --dir=public --prod --site=$NETLIFY_SITE_ID --auth=$NETLIFY_AUTH_TOKEN
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-preview:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: public

      - name: Deploy preview to Netlify
        id: netlify-deploy
        run: |
          OUTPUT=$(netlify deploy --dir=public --json --site=$NETLIFY_SITE_ID --auth=$NETLIFY_AUTH_TOKEN)
          echo "$OUTPUT"
          PREVIEW_URL=$(echo "$OUTPUT" | jq -r '.deploy_url')
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "### ðŸš€ Preview Deploy" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Preview URL: $PREVIEW_URL" >> $GITHUB_STEP_SUMMARY
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const previewUrl = '${{ steps.netlify-deploy.outputs.preview_url }}';
            const comment = `## ðŸš€ Preview Deployment
            
            Your preview deployment is ready!
            
            **Preview URL:** ${previewUrl}
            
            Built from commit: ${context.sha.substring(0, 7)}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
